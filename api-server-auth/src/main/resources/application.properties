spring.application.name=api-server-auth
# server.port=8081
spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:testdb
#
spring.datasource.url=jdbc:h2:file:./data/testdb;AUTO_SERVER=TRUE
spring.datasource.username=sa
spring.datasource.password=1234
# in memory 방식으로 파일에 저장하는 데이터베이스 : 확인 http://localhost:8080/h2-console

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console


# Hibernate DDL
spring.jpa.hibernate.ddl-auto=create
# create는 한번만 -> 그 이후에는 none으로 변경하세요.
logging.level.org.iclass=DEBUG

# SQL
spring.jpa.show-sql=true

# SQL
spring.jpa.properties.hibernate.format_sql=true
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

#spring.sql.init.data-locations=classpath:data.sql

# ?? ?? ?? ?? (?? ??)
spring.servlet.multipart.max-file-size=30MB

# ?? ?? ?? ??
spring.servlet.multipart.max-request-size=40MB

# swagger
# Try it out 버튼 활성화 요청 방식 설정
springdoc.swagger-ui.try-it-out-enabled=true

# 
# application.properties 방식
# 개발 환경일 때만 swagger 사용 가능
spring.profiles.active=dev
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true

# 운영 환경
# spring.profiles.active=prod
# springdoc.swagger-ui.enabled=false
# springdoc.api-docs.enabled=false
#
# 개발 환경
# java -jar app.jar --spring.profiles.active=dev

# 운영 환경  
# java -jar app.jar --spring.profiles.active=prod